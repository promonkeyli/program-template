definitions:
  models.Tool:
    description: Tool represents a tool entity
    properties:
      category:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
  models.User:
    description: User represents a user entity
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  network.Response:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/network.StatusCode'
        description: 响应码
      data:
        description: 响应数据(可以为空)
      message:
        description: 响应描述
        type: string
      time:
        description: 响应时间戳
        type: integer
    type: object
  network.StatusCode:
    enum:
    - 200
    - 400
    - 401
    - 403
    - 404
    - 500
    - 501
    - 502
    - 503
    type: integer
    x-enum-varnames:
    - StatusOK
    - StatusBadRequest
    - StatusUnauthorized
    - StatusForbidden
    - StatusNotFound
    - StatusInternalServerError
    - StatusNotImplemented
    - StatusBadGateway
    - StatusServiceUnavailable
info:
  contact: {}
  description: Go编写的个人网站后台接口
  title: 个人网站后台接口文档
  version: 0.0.1
paths:
  /login:
    post:
      consumes:
      - application/json
      description: 使用用户名密码进行登录
      parameters:
      - description: 用户名密码登录
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/network.Response'
      security:
      - BearerAuth: []
      summary: 用户登录
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: 用户注销，清除会话、注销令牌
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/network.Response'
      security:
      - BearerAuth: []
      summary: 用户注销
      tags:
      - auth
  /tools:
    get:
      consumes:
      - application/json
      description: 获取工具
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/network.Response'
        "400":
          description: 参数错误！
          schema:
            type: string
        "500":
          description: 服务器错误！
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 工具列表
      tags:
      - tool
    post:
      consumes:
      - application/json
      description: 添加工具
      parameters:
      - description: 工具新增
        in: body
        name: tool
        required: true
        schema:
          $ref: '#/definitions/models.Tool'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/network.Response'
        "400":
          description: 参数错误！
          schema:
            type: string
        "500":
          description: 服务器错误！
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 工具新增
      tags:
      - tool
  /users:
    get:
      consumes:
      - application/json
      description: 获取所有用户
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/network.Response'
        "400":
          description: 参数错误！
          schema:
            type: string
        "500":
          description: 服务器错误！
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户列表
      tags:
      - user
    post:
      consumes:
      - application/json
      description: 新增用户
      parameters:
      - description: 用户新增
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/network.Response'
        "400":
          description: 参数错误！
          schema:
            type: string
        "500":
          description: 服务器错误！
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 新增用户
      tags:
      - user
securityDefinitions:
  BearerAuth:
    description: 'JWT认证，格式: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: 权限模块
  name: auth
- description: 用户模块
  name: user
- description: 工具模块
  name: tool
